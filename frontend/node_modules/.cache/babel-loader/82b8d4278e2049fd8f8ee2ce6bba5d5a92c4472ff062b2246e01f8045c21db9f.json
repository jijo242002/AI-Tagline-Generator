{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jijo2\\\\Downloads\\\\ai-tagline-generator-flat\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport TaglineForm from \"./components/TaglineForm\";\nimport HistoryList from \"./components/HistoryList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [history, setHistory] = useState([]);\n  const [suggestions, setSuggestions] = useState([]);\n  const handleGenerate = async ({\n    product,\n    features,\n    audience\n  }) => {\n    try {\n      const response = await fetch(\"http://localhost:5000/generate\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          product,\n          features,\n          audience\n        })\n      });\n      const data = await response.json();\n      if (data.tagline) {\n        setSuggestions([data.tagline, ...(data.alternatives || [])]);\n        setHistory(prev => [{\n          product,\n          tagline: data.tagline\n        }, ...prev]);\n      }\n    } catch (error) {\n      console.error(\"Error generating tagline:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-50 p-6 flex flex-col items-center\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-3xl font-bold mb-6 text-blue-700\",\n      children: \"\\uD83C\\uDFAF AI Tagline Generator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TaglineForm, {\n      onGenerate: handleGenerate,\n      suggestions: suggestions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(HistoryList, {\n      history: history\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Lx/sV3I1i27UJZtu9TCDc/aW+ZI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","TaglineForm","HistoryList","jsxDEV","_jsxDEV","App","_s","history","setHistory","suggestions","setSuggestions","handleGenerate","product","features","audience","response","fetch","method","headers","body","JSON","stringify","data","json","tagline","alternatives","prev","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onGenerate","_c","$RefreshReg$"],"sources":["C:/Users/jijo2/Downloads/ai-tagline-generator-flat/frontend/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport TaglineForm from \"./components/TaglineForm\";\nimport HistoryList from \"./components/HistoryList\";\n\nfunction App() {\n  const [history, setHistory] = useState([]);\n  const [suggestions, setSuggestions] = useState([]);\n\n  const handleGenerate = async ({ product, features, audience }) => {\n    try {\n      const response = await fetch(\"http://localhost:5000/generate\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ product, features, audience }),\n      });\n\n      const data = await response.json();\n\n      if (data.tagline) {\n        setSuggestions([data.tagline, ...(data.alternatives || [])]);\n        setHistory((prev) => [\n          { product, tagline: data.tagline },\n          ...prev,\n        ]);\n      }\n    } catch (error) {\n      console.error(\"Error generating tagline:\", error);\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gray-50 p-6 flex flex-col items-center\">\n      <h1 className=\"text-3xl font-bold mb-6 text-blue-700\">\n        ðŸŽ¯ AI Tagline Generator\n      </h1>\n      <TaglineForm onGenerate={handleGenerate} suggestions={suggestions} />\n      <HistoryList history={history} />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,WAAW,MAAM,0BAA0B;AAClD,OAAOC,WAAW,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACS,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAElD,MAAMW,cAAc,GAAG,MAAAA,CAAO;IAAEC,OAAO;IAAEC,QAAQ;IAAEC;EAAS,CAAC,KAAK;IAChE,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,gCAAgC,EAAE;QAC7DC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAET,OAAO;UAAEC,QAAQ;UAAEC;QAAS,CAAC;MACtD,CAAC,CAAC;MAEF,MAAMQ,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;MAElC,IAAID,IAAI,CAACE,OAAO,EAAE;QAChBd,cAAc,CAAC,CAACY,IAAI,CAACE,OAAO,EAAE,IAAIF,IAAI,CAACG,YAAY,IAAI,EAAE,CAAC,CAAC,CAAC;QAC5DjB,UAAU,CAAEkB,IAAI,IAAK,CACnB;UAAEd,OAAO;UAAEY,OAAO,EAAEF,IAAI,CAACE;QAAQ,CAAC,EAClC,GAAGE,IAAI,CACR,CAAC;MACJ;IACF,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACnD;EACF,CAAC;EAED,oBACEvB,OAAA;IAAKyB,SAAS,EAAC,wDAAwD;IAAAC,QAAA,gBACrE1B,OAAA;MAAIyB,SAAS,EAAC,uCAAuC;MAAAC,QAAA,EAAC;IAEtD;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACL9B,OAAA,CAACH,WAAW;MAACkC,UAAU,EAAExB,cAAe;MAACF,WAAW,EAAEA;IAAY;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACrE9B,OAAA,CAACF,WAAW;MAACK,OAAO,EAAEA;IAAQ;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC9B,CAAC;AAEV;AAAC5B,EAAA,CAnCQD,GAAG;AAAA+B,EAAA,GAAH/B,GAAG;AAqCZ,eAAeA,GAAG;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}